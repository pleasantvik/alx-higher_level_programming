===========================
Doctest for 3. Print square
===========================

This module defines a Print square function ```def print_square(size):```.

# USAGE
========

Valid calls:
------------

* ```def print_square(size):``` prints a square with the character #.
::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(4)
    ####
    ####
    ####
    ####
    >>> print_square(1)
    #

* if 0 is passed, nothing is printed
::

    >>> print_square(0)

Invalid calls:
--------------

* size must be an integer, otherwise raise a TypeError exception
::

    >>> print_square("4")
    Traceback (most recent call last):
    TypeError: size must be an integer
    >>> print_square(4.0)
    Traceback (most recent call last):
    TypeError: size must be an integer

* if size is less than 0, raise a ValueError exception with the message size must be >= 0
::

    >>> print_square(-1)
    Traceback (most recent call last):
    ValueError: size must be >= 0

* The function requires only 1 argument (size) to work
::

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
    >>> print_square(1, 3, 4) #doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError: print_square() takes 1 positional argument but ...
